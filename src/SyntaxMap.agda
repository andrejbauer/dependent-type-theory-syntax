open import Level
import Categories.Category
open import Relation.Binary.PropositionalEquality using (_РЅА_; refl; sym; trans; subst; cong)

open import Syntax
import Renaming
import Substitution
import Instantiation

module SyntaxMap where

  open SymbolSignature
  open Expression

  infix 5 _Рєњрхљ_

  -- syntax map

  _Рєњрхљ_ : SymbolSignature Рєњ SymbolSignature Рєњ Set
  ­ЮЋі Рєњрхљ ­ЮЋІ = Рѕђ {cl} (S : symb ­ЮЋі cl) Рєњ Expr ­ЮЋІ (obj cl) (symb-arg ­ЮЋі S)  ­ЮЪў

  -- equality of syntax maps

  infix 4 _РЅѕрхљ_

  _РЅѕрхљ_ : Рѕђ {­ЮЋі ­ЮЋІ} (f g : ­ЮЋі Рєњрхљ ­ЮЋІ) Рєњ Set
  _РЅѕрхљ_ {­ЮЋі = ­ЮЋі} {­ЮЋІ = ­ЮЋІ} f g =
    Рѕђ {cl} (S : symb ­ЮЋі cl) Рєњ Equality._РЅѕ_ ­ЮЋІ (f S) (g S)

  -- equality is an equivalence relation

  РЅѕрхљ-refl : Рѕђ {­ЮЋі ­ЮЋІ} {f : ­ЮЋі Рєњрхљ ­ЮЋІ} Рєњ f РЅѕрхљ f
  РЅѕрхљ-refl {­ЮЋІ = ­ЮЋІ} S = Equality.РЅѕ-refl ­ЮЋІ

  РЅѕрхљ-sym : Рѕђ {­ЮЋі ­ЮЋІ} {f g : ­ЮЋі Рєњрхљ ­ЮЋІ} Рєњ f РЅѕрхљ g Рєњ g РЅѕрхљ f
  РЅѕрхљ-sym {­ЮЋІ = ­ЮЋІ} ╬Й S = Equality.РЅѕ-sym ­ЮЋІ (╬Й S)

  РЅѕрхљ-trans : Рѕђ {­ЮЋі ­ЮЋІ} {f g h : ­ЮЋі Рєњрхљ ­ЮЋІ} Рєњ f РЅѕрхљ g Рєњ g РЅѕрхљ h Рєњ f РЅѕрхљ h
  РЅѕрхљ-trans {­ЮЋІ = ­ЮЋІ} ╬Х ╬Й S = Equality.РЅѕ-trans ­ЮЋІ (╬Х S) (╬Й S)

  -- The identity raw syntax map

  ­ЮЪЎрхљ : Рѕђ {­ЮЋі} Рєњ (­ЮЋі Рєњрхљ ­ЮЋі)
  ­ЮЪЎрхљ {­ЮЋі} S = expr-symb S (expr-meta-generic ­ЮЋі)

  -- Action of a raw syntax map

  infixr 10 [_]рхљ_

  [_]рхљ_ : Рѕђ {­ЮЋі ­ЮЋІ} Рєњ (­ЮЋі Рєњрхљ ­ЮЋІ) Рєњ Рѕђ {cl ­ЮЋё ╬│} Рєњ Expr ­ЮЋі ­ЮЋё cl ╬│ Рєњ Expr ­ЮЋІ ­ЮЋё cl ╬│
  [ f ]рхљ (expr-var x) = expr-var x
  [_]рхљ_ {­ЮЋІ = ­ЮЋІ} f {­ЮЋё = ­ЮЋё} (expr-symb S es) =
    let open Instantiation ­ЮЋІ in
    let open Renaming ­ЮЋІ in
        [ (╬╗ M Рєњ  [ f ]рхљ es M) ]РЂ▒ ([ ­ЮЪў-initial ]╩│ f S)
  [ f ]рхљ (expr-meta M ts) = expr-meta M (╬╗ i Рєњ [ f ]рхљ (ts i))
  [ f ]рхљ expr-eqty = expr-eqty
  [ f ]рхљ expr-eqtm = expr-eqtm

  -- Composition of raw syntax maps

  infixl 7 _Рѕўрхљ_

  _Рѕўрхљ_ : Рѕђ {­ЮЋі ­ЮЋІ ­ЮЋї} Рєњ (­ЮЋІ Рєњрхљ ­ЮЋї) Рєњ (­ЮЋі Рєњрхљ ­ЮЋІ) Рєњ (­ЮЋі Рєњрхљ ­ЮЋї)
  (g Рѕўрхљ f) S =  [ g ]рхљ (f S)

  -- Action preserves identity
  module _ {­ЮЋі} where
    open Equality ­ЮЋі
    open Renaming ­ЮЋі
    open Instantiation ­ЮЋі

    [­ЮЪЎ]рхљ : Рѕђ {cl ­ЮЋё ╬│} (t : Expr ­ЮЋі cl ­ЮЋё ╬│) Рєњ [ ­ЮЪЎрхљ ]рхљ t РЅѕ t
    [­ЮЪЎ]рхљ (expr-var x) = РЅѕ-refl
    [­ЮЪЎ]рхљ (expr-symb S es) = РЅѕ-symb (╬╗ i Рєњ {!!})
    [­ЮЪЎ]рхљ (expr-meta M ts) = РЅѕ-meta ╬╗ i Рєњ [­ЮЪЎ]рхљ (ts i)
    [­ЮЪЎ]рхљ expr-eqty = РЅѕ-eqty
    [­ЮЪЎ]рхљ expr-eqtm = РЅѕ-eqtm

  -- Action preserves composition
  module _ {­ЮЋі ­ЮЋІ ­ЮЋї} where
    open Equality ­ЮЋї

    [Рѕў]рхљ : Рѕђ {f : ­ЮЋі Рєњрхљ ­ЮЋІ} {g : ­ЮЋІ Рєњрхљ ­ЮЋї} {cl ­ЮЋё ╬│} (t : Expr ­ЮЋі ­ЮЋё cl ╬│) Рєњ [ g Рѕўрхљ f ]рхљ t РЅѕ [ g ]рхљ [ f ]рхљ t
    [Рѕў]рхљ (expr-var x) = РЅѕ-refl
    [Рѕў]рхљ (expr-symb S es) = {!!}
    [Рѕў]рхљ (expr-meta M ts) = РЅѕ-meta (╬╗ i Рєњ [Рѕў]рхљ (ts i))
    [Рѕў]рхљ expr-eqty = РЅѕ-eqty
    [Рѕў]рхљ expr-eqtm = РЅѕ-eqtm

  -- Associativity of composition

  assocрхљ : Рѕђ {­ЮЋі ­ЮЋІ ­ЮЋї ­ЮЋЇ} {f : ­ЮЋі Рєњрхљ ­ЮЋІ} {g : ­ЮЋІ Рєњрхљ ­ЮЋї} {h : ­ЮЋї Рєњрхљ ­ЮЋЇ} Рєњ
           (h Рѕўрхљ g) Рѕўрхљ f РЅѕрхљ h Рѕўрхљ (g Рѕўрхљ f)
  assocрхљ {f = f} S = [Рѕў]рхљ (f S)

  -- The category of signatures and syntax maps

  module _ where

   open Categories.Category

   SyntaxMaps : Category (suc zero) {!!} {!!}
   SyntaxMaps =
     record
       { Obj = SymbolSignature
       ; _РЄњ_ = _Рєњрхљ_
       ; _РЅѕ_ = _РЅѕрхљ_
       ; id = ­ЮЪЎрхљ
       ; _Рѕў_ = _Рѕўрхљ_
       ; assoc = ╬╗ {_} {_} {_} {_} {f} {_} {_} {_} S Рєњ [Рѕў]рхљ (f S)
       ; sym-assoc = ╬╗ {_} {_} {_} {­ЮЋЇ} {f} {_} {_} {_} S Рєњ Equality.РЅѕ-sym ­ЮЋЇ ([Рѕў]рхљ (f S))
       ; identity╦А = ╬╗ S Рєњ {!!}
       ; identity╩│ = {!!}
       ; identity┬▓ = {!!}
       ; equiv = record { refl = РЅѕрхљ-refl ; sym = РЅѕрхљ-sym ; trans = РЅѕрхљ-trans }
       ; Рѕў-resp-РЅѕ = {!!}
       }
